##
# You should look at the following URL's in order to grasp a solid understanding
# of Nginx configuration files in order to fully unleash the power of Nginx.
# https://www.nginx.com/resources/wiki/start/
# https://www.nginx.com/resources/wiki/start/topics/tutorials/config_pitfalls/
# https://wiki.debian.org/Nginx/DirectoryStructure
#
# In most cases, administrators will remove this file from sites-enabled/ and
# leave it as reference inside of sites-available where it will continue to be
# updated by the nginx packaging team.
#
# This file will automatically load configuration files provided by other
# applications, such as Drupal or Wordpress. These applications will be made
# available underneath a path with that package name, such as /drupal8.
#
# Please see /usr/share/doc/nginx-doc/examples/ for more detailed examples.
##

# Default server configuration
#
server {
	#listen 80 default_server;
	#listen [::]:80 default_server;
	
	listen 443 ssl;
	listen [::]:443 ssl;
    ssl_certificate /etc/letsencrypt/live/external.su/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/external.su/privkey.pem; # managed by Certbot
	#include snippets/self-signed.conf;
	#include snippets/ssl-params.conf;

#location / {
#        dav_methods PUT DELETE MKCOL COPY MOVE;
 #       dav_ext_methods PROPFIND OPTIONS;
  #      dav_access user:rw group:rw all:rw;
#	root /var/www/Music;
 #       client_max_body_size 0;
  #      create_full_put_path on;
   #     client_body_temp_path /tmp/;
#
 #       auth_pam "Restricted";
  #      auth_pam_service_name "common-auth";
   # }


	# SSL configuration
	#
	# listen 443 ssl default_server;
	# listen [::]:443 ssl default_server;
	#
	# Note: You should disable gzip for SSL traffic.
	# See: https://bugs.debian.org/773332
	#
	# Read up on ssl_ciphers to ensure a secure configuration.
	# See: https://bugs.debian.org/765782
	#
	# Self signed certs generated by the ssl-cert package
	# Don't use them in a production server!
	#
	# include snippets/snakeoil.conf;

	root /var/www/Project/Project.web/public;

	# Add index.php to the list if you are using PHP
	index index.php index.html index.htm;

	server_name external.su;

	

	location / {
		# First attempt to serve request as file, then
		# as directory, then fall back to displaying a 404.
		try_files $uri $uri/ /index.php?$query_string;
	}

	# pass PHP scripts to FastCGI server
	#
	location ~ \.php$ {
		include snippets/fastcgi-php.conf;
	#
	#	# With php-fpm (or other unix sockets):
		fastcgi_pass unix:/run/php/php8.1-fpm.sock;
	#	# With php-cgi (or other tcp sockets):
	#	fastcgi_pass 127.0.0.1:9000;
	}

	# deny access to .htaccess files, if Apache's document root
	# concurs with nginx's one
	#
	location ~ /\.ht {
		deny all;
	}
	# Добавить в SSL-блок server

	location ~ /.well-known {
	    allow all;
}

}

server {
    if ($host = external.su) {
        return 301 https://$host$request_uri;
    } # managed by Certbot


    listen 80;
    listen [::]:80;

    server_name external.su www.external.su;

    return 301 https://$server_name$request_uri;


}
#server {
#    listen 8080;
#    listen [::]:8080;
#    root /var/www;
#    index index.html index.htm index.nginx-debian.html;
#    server_name external.su;
#
#    location / {
#        dav_methods PUT DELETE MKCOL COPY MOVE;
#        dav_ext_methods PROPFIND OPTIONS;
#        dav_access user:rw group:rw all:rw;
#
#        client_max_body_size 0;
#        create_full_put_path on;
#        client_body_temp_path /tmp/;

#        auth_pam "Restricted";
#        auth_pam_service_name "common-auth";
#    }
#}
# Virtual Host configuration for example.com
#
# You can move that to a different file under sites-available/ and symlink that
# to sites-enabled/ to enable it.
#
#server {
#	listen 80;
#	listen [::]:80;
#
#	server_name example.com;
#
#	root /var/www/example.com;
#	index index.html;
#
#	location / {
#		try_files $uri $uri/ =404;
#	}
#}
